Overlapping_JJ experiment_NN infrastructure_NN :_: more_JJR ,_, better_JJR ,_, faster_JJR experimentation_NN
rovides_NNS both_CC a_DT survey_NN and_CC tutorial_NN on_IN how_WRB to_TO run_VB controlled_JJ experiments_NNS for_IN the_DT web_NN -LRB-_-LRB- 7_CD -RRB-_-RRB- ._.
There_EX are_VBP several_JJ follow-up_JJ papers_NNS that_WDT describe_VBP various_JJ pitfalls_NNS when_WRB running_VBG and_CC analyzing_VBG these_DT experiments_NNS =_JJ -_: =[_NN 4_CD ,_, 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Krieger_NNP has_VBZ a_DT presentation_NN on_IN how_WRB to_TO run_VB A-B_NN tests_NNS -LRB-_-LRB- 8_CD -RRB-_-RRB- and_CC Google_NNP WebSite_NNP Optimizer_NNP helps_VBZ web_NN site_NN designers_NNS run_VBP their_PRP$ Figure_NNP 1_CD :_: A_DT sample_NN flow_NN of_IN a_DT query_NN through_IN multiple_JJ binaries_NNS ._.
Information_NN -LRB-_-LRB- and_CC
tests_NNS -LRB-_-LRB- 8_CD -RRB-_-RRB- and_CC Google_NNP WebSite_NNP Optimizer_NNP helps_VBZ web_NN site_NN designers_NNS run_VBP their_PRP$ Figure_NNP 1_CD :_: A_DT sample_NN flow_NN of_IN a_DT query_NN through_IN multiple_JJ binaries_NNS ._.
Information_NN -LRB-_-LRB- and_CC time_NN -RRB-_-RRB- flows_VBZ from_IN left_NN to_TO right_NN ._.
own_JJ A-B_NN tests_NNS =_JJ -_: =[_NN 5_CD -RRB-_-RRB- -_: =_SYM -_: ._.
In_IN general_JJ ,_, these_DT papers_NNS focus_VBP more_RBR on_IN how_WRB to_TO design_VB and_CC evaluate_VB web-based_JJ experiments_NNS ._.
The_DT first_JJ Kohavi_NNP paper_NN is_VBZ perhaps_RB the_DT most_RBS relevant_JJ ,_, since_IN several_JJ design_NN considerations_NNS about_IN how_WRB to_TO build_VB a_DT
experiments_NNS for_IN the_DT web_NN -LRB-_-LRB- 7_CD -RRB-_-RRB- ._.
There_EX are_VBP several_JJ follow-up_JJ papers_NNS that_WDT describe_VBP various_JJ pitfalls_NNS when_WRB running_VBG and_CC analyzing_VBG these_DT experiments_NNS -LRB-_-LRB- 4_CD ,_, 9_CD -RRB-_-RRB- ._.
Krieger_NNP has_VBZ a_DT presentation_NN on_IN how_WRB to_TO run_VB A-B_NN tests_NNS =_JJ -_: =[_NN 8_CD -RRB-_-RRB- -_: =_JJ -_: and_CC Google_NNP WebSite_NNP Optimizer_NNP helps_VBZ web_NN site_NN designers_NNS run_VBP their_PRP$ Figure_NNP 1_CD :_: A_DT sample_NN flow_NN of_IN a_DT query_NN through_IN multiple_JJ binaries_NNS ._.
Information_NN -LRB-_-LRB- and_CC time_NN -RRB-_-RRB- flows_VBZ from_IN left_NN to_TO right_NN ._.
own_JJ A-B_NN tests_NNS -LRB-_-LRB- 5_CD -RRB-_-RRB- ._.
In_IN ge_NN
rovides_NNS both_CC a_DT survey_NN and_CC tutorial_NN on_IN how_WRB to_TO run_VB controlled_JJ experiments_NNS for_IN the_DT web_NN -LRB-_-LRB- 7_CD -RRB-_-RRB- ._.
There_EX are_VBP several_JJ follow-up_JJ papers_NNS that_WDT describe_VBP various_JJ pitfalls_NNS when_WRB running_VBG and_CC analyzing_VBG these_DT experiments_NNS =_JJ -_: =[_NN 4_CD ,_, 9_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Krieger_NNP has_VBZ a_DT presentation_NN on_IN how_WRB to_TO run_VB A-B_NN tests_NNS -LRB-_-LRB- 8_CD -RRB-_-RRB- and_CC Google_NNP WebSite_NNP Optimizer_NNP helps_VBZ web_NN site_NN designers_NNS run_VBP their_PRP$ Figure_NNP 1_CD :_: A_DT sample_NN flow_NN of_IN a_DT query_NN through_IN multiple_JJ binaries_NNS ._.
Information_NN -LRB-_-LRB- and_CC
yer_NN means_VBZ that_IN every_DT query_NN is_VBZ in_IN at_IN most_JJS one_CD experiment_NN ,_, which_WDT is_VBZ easy-to-use_JJ and_CC flexible_JJ ,_, but_CC simply_RB insufficiently_RB scalable_JJ ._.
Multi-factorial_JJ experimental_JJ design_NN is_VBZ common_JJ in_IN statistical_JJ literature_NN =_JJ -_: =[_NN 3_CD -RRB-_-RRB- -_: =_JJ -_: ,_, where_WRB each_DT parameter_NN -LRB-_-LRB- factor_NN -RRB-_-RRB- can_MD be_VB experimented_VBN on_IN independently_RB ;_: each_DT experimental_JJ value_NN for_IN a_DT parameter_NN overlaps_VBZ with_IN every_DT other_JJ experiment_NN value_NN for_IN all_DT of_IN the_DT other_JJ parameters_NNS ._.
Effectively_RB ,_, e_SYM
suppose_VB some_DT team_NN wants_VBZ to_TO test_VB a_DT new_JJ machine_NN learning_NN algorithm_NN for_IN predicting_VBG the_DT CTR_NN of_IN ads_NNS ,_, or_CC even_RB to_TO test_VB variations_NNS of_IN an_DT existing_VBG algorithm_NN -LRB-_-LRB- e._NN g_NN ,_, by_IN adjusting_VBG the_DT learning_NN or_CC shrinkage_NN rate_NN -RRB-_-RRB- =_JJ -_: =[_NN 1_CD ,_, 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
While_IN offline_JJ evaluation_NN can_MD be_VB useful_JJ for_IN narrowing_VBG down_RP the_DT space_NN of_IN options_NNS to_TO test_VB ,_, ultimately_RB these_DT options_NNS must_MD be_VB tested_VBN on_IN live_JJ traffic_NN in_IN order_NN to_TO evaluate_VB how_WRB well_RB a_DT particular_JJ parameteriz_NN
1\/queriesexperiment_NN -RRB-_-RRB- ,_, then_RB we_PRP can_MD use_VB queriesexperiment_NN =_JJ N_NN rather_RB than_IN 2N_NN ,_, leading_VBG to_TO a_DT smaller_JJR experiment_NN size_NN of_IN queriesexperiment_NN =_JJ N_NN ≥_NN 10.5_CD -LRB-_-LRB- s_NNS \/_: θ_NN -RRB-_-RRB- 2_CD while_IN gaining_VBG statistical_JJ power_NN -LRB-_-LRB- 1_CD −_FW β_FW -RRB-_-RRB- of_IN 90_CD %_NN =_JJ -_: =[_NN 2_CD -RRB-_-RRB- -_: =_SYM -_: ._.
The_DT bigger_JJR issue_NN we_PRP encountered_VBD in_IN sizing_VBG experiments_NNS is_VBZ how_WRB to_TO estimate_VB s_NN ,_, the_DT standard_JJ error_NN ,_, especially_RB since_IN we_PRP use_VBP many_JJ ratio_NN metrics_NNS ,_, y\/z_NN -LRB-_-LRB- e.g._FW ,_, coverage_NN ,_, the_DT percentage_NN of_IN queries_NNS on_IN which_WDT we_PRP
ental_JJ unit_NN and_CC then_RB write_VB s_NN in_IN terms_NNS of_IN s_NN ′_NN ,_, e.g._FW here_RB s_NN ′_NN would_MD be_VB the_DT standard_JJ error_NN per_IN cookie-mod_NN ,_, and_CC s_NN =_JJ s_NN ′_FW √_FW avg_FW queries_NNS per_IN cookie_mod_NN ._.
For_IN ratio_NN metrics_NNS ,_, we_PRP calculate_VBP s_NN ′_NN using_VBG the_DT delta_NN method_NN =_JJ -_: =[_NN 11_CD -RRB-_-RRB- -_: =_SYM -_: ._.
Figure_NN 4_CD shows_VBZ the_DT standard_JJ error_NN against_IN 1_CD \/_: √_NN N_NN for_IN the_DT coverage_NN metric_NN in_IN different_JJ experiments_NNS --_: both_DT cookie-mod_JJ and_CC random_JJ traffic_NN experiments_NNS ._.
The_DT slope_NN of_IN the_DT line_NN gives_VBZ s._NN While_IN the_DT axis_NN labels_NNS
experiment_NN infrastructure_NN and_CC the_DT overall_JJ experimentation_NN environment_NN to_TO support_VB running_VBG more_JJR experiments_NNS more_RBR quickly_RB and_CC more_RBR robustly_RB ._.
The_DT final_JJ area_NN of_IN related_JJ work_NN is_VBZ on_IN interleaved_JJ experiments_NNS =_JJ -_: =[_NN 6_CD -RRB-_-RRB- -_: =_JJ -_: ,_, which_WDT is_VBZ focused_VBN on_IN a_DT specific_JJ type_NN of_IN experiment_NN design_NN -LRB-_-LRB- intraquery_NN -RRB-_-RRB- used_VBN for_IN evaluating_VBG ranking_JJ changes_NNS ._.
This_DT type_NN of_IN experiment_NN may_MD easily_RB be_VB run_VBN within_IN the_DT experimental_JJ environment_NN that_IN we_PRP descr_VBP
uickly_JJ and_CC disabled_JJ ._.
Standardized_JJ metrics_NNS should_MD be_VB easily_RB available_JJ for_IN all_DT experiments_NNS so_IN that_DT experiment_NN comparisons_NNS are_VBP fair_JJ :_: two_CD experimenters_NNS should_MD use_VB the_DT same_JJ filters_NNS to_TO remove_VB robot_NN traffic_NN =_JJ -_: =[_NN 7_CD -RRB-_-RRB- -_: =_SYM -_: when_WRB calculating_VBG a_DT metric_NN such_JJ as_IN CTR_NN ._.
•_NNP Faster_NNP :_: It_PRP should_MD be_VB easy_JJ and_CC quick_JJ to_TO set_VB up_RP an_DT experiment_NN ;_: easy_JJ enough_RB that_IN a_DT non-engineer_NN can_MD do_VB so_RB without_IN writing_VBG any_DT code_NN ._.
Metrics_NNS should_MD be_VB available_JJ q_NN
suppose_VB some_DT team_NN wants_VBZ to_TO test_VB a_DT new_JJ machine_NN learning_NN algorithm_NN for_IN predicting_VBG the_DT CTR_NN of_IN ads_NNS ,_, or_CC even_RB to_TO test_VB variations_NNS of_IN an_DT existing_VBG algorithm_NN -LRB-_-LRB- e._NN g_NN ,_, by_IN adjusting_VBG the_DT learning_NN or_CC shrinkage_NN rate_NN -RRB-_-RRB- =_JJ -_: =[_NN 1_CD ,_, 10_CD -RRB-_-RRB- -_: =_SYM -_: ._.
While_IN offline_JJ evaluation_NN can_MD be_VB useful_JJ for_IN narrowing_VBG down_RP the_DT space_NN of_IN options_NNS to_TO test_VB ,_, ultimately_RB these_DT options_NNS must_MD be_VB tested_VBN on_IN live_JJ traffic_NN in_IN order_NN to_TO evaluate_VB how_WRB well_RB a_DT particular_JJ parameteriz_NN
